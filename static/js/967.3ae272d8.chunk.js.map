{"version":3,"file":"static/js/967.3ae272d8.chunk.js","mappings":"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","sources":["webpack://ts-react-app/./src/components/WorkCard/index.less?6a72","components/WorkCard/index.tsx","views/Home/MyTemplate/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"index_card__ES1PQ\",\"header-mask\":\"index_header-mask__SMrgr\",\"unpublish\":\"index_unpublish__Sx+xU\",\"cover\":\"index_cover__u0yrd\",\"post-wrapper\":\"index_post-wrapper__jtv9i\",\"title\":\"index_title__rLoeU\",\"btn-wrapper\":\"index_btn-wrapper__44kT2\",\"btn\":\"index_btn__gbskZ\",\"create\":\"index_create__lFkXu\",\"temp-create\":\"index_temp-create__tQNp4\"};","import { Button, Dropdown, message, Modal } from \"antd\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styles from \"./index.less\";\r\nimport {\r\n  ExclamationCircleFilled,\r\n  PlusOutlined,\r\n  PoweroffOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { ProjectConfig, getProjectConfig } from \"@/types/config\";\r\nimport {\r\n  createPage,\r\n  deletePage,\r\n  setTemplate,\r\n  copyPage,\r\n  publishPage,\r\n} from \"@/api\";\r\nimport { useState } from \"react\";\r\nimport PreviewModal from \"../PreviewModal\";\r\n\r\nconst { confirm } = Modal;\r\n\r\nexport type WorkCardBtnType =\r\n  | \"edit\"\r\n  | \"copy\"\r\n  | \"copyUrl\"\r\n  | \"setTemplate\"\r\n  | \"delete\"\r\n  | \"publish\"\r\n  | \"publishTemplate\"\r\n  | \"useTemplate\";\r\n\r\ninterface WorkCardProps {\r\n  refresh?: () => void;\r\n  config?: ProjectConfig;\r\n  showMoreBtn?: boolean;\r\n  btnList?: WorkCardBtnType[];\r\n  showPublish?: boolean;\r\n}\r\n\r\nconst WorkCard: React.FC<WorkCardProps> = ({\r\n  refresh,\r\n  config,\r\n  showMoreBtn = true,\r\n  btnList = [\"edit\", \"copy\"],\r\n  showPublish = false,\r\n}) => {\r\n  const navigate = useNavigate();\r\n  const [isShowPreviewModal, setIsShowPreviewModal] = useState(false);\r\n\r\n  const handleCreate = async () => {\r\n    let newPageData = getProjectConfig();\r\n    const res = await createPage({ ...newPageData });\r\n    const id = res.result._id;\r\n    linkToEdit(id);\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      await deletePage({ id: config?._id });\r\n      message.success(\"删除项目成功\");\r\n      refresh?.();\r\n    } catch {\r\n      message.error(\"删除项目失败\");\r\n    }\r\n  };\r\n\r\n  const handleSetTemplate = async () => {\r\n    try {\r\n      await setTemplate({ id: config?._id });\r\n      message.success(\"设置模板成功\");\r\n    } catch {\r\n      message.error(\"设置模板失败\");\r\n    }\r\n  };\r\n\r\n  const handleCopy = async () => {\r\n    try {\r\n      await copyPage({ id: config?._id });\r\n      message.success(\"复制成功\");\r\n      refresh?.();\r\n    } catch {\r\n      message.error(\"复制失败\");\r\n    }\r\n  };\r\n\r\n  const handleUseTemplate = async () => {\r\n    try {\r\n      const res = await copyPage({ id: config?._id });\r\n      message.success(\"使用模板成功\");\r\n      linkToEdit(res.result.id);\r\n    } catch {\r\n      message.error(\"使用模板失败\");\r\n    }\r\n  };\r\n\r\n  const handlePublish = async () => {\r\n    try {\r\n      await publishPage({ id: config?._id });\r\n      message.success(\"发布成功\");\r\n      refresh?.();\r\n    } catch {\r\n      message.error(\"发布失败\");\r\n    }\r\n  };\r\n\r\n  const handlePublishTemplate = async () => {\r\n    try {\r\n      await publishPage({ id: config?._id });\r\n      message.success(\"发布模板成功\");\r\n    } catch {\r\n      message.error(\"发布模板失败\");\r\n    }\r\n  };\r\n\r\n  const handleCopyUrl = async () => {\r\n    // @ts-ignore\r\n    const prefix = window.location.href.split(\"#\")[0];\r\n    try {\r\n      await navigator.clipboard.writeText(`${prefix}#/view/${config?._id}`);\r\n      message.success(\"复制链接成功\");\r\n    } catch (err) {\r\n      console.log(err);\r\n      message.error(\"复制链接失败\");\r\n    }\r\n  };\r\n\r\n  const linkToEdit = (id?: string) => {\r\n    navigate(`/editor/${id}`, {\r\n      replace: false,\r\n    });\r\n  };\r\n\r\n  const moreMenu = () => {\r\n    const allItems = [\r\n      {\r\n        label: <div onClick={handlePublish}>发布</div>,\r\n        key: \"publish\",\r\n      },\r\n      {\r\n        label: <div onClick={handleCopyUrl}>复制链接</div>,\r\n        key: \"copyUrl\",\r\n      },\r\n      {\r\n        label: <div onClick={handleSetTemplate}>设为我的模板</div>,\r\n        key: \"setTemplate\",\r\n      },\r\n      {\r\n        label: <div onClick={handlePublishTemplate}>发布到素材广场</div>,\r\n        key: \"publishTemplate\",\r\n      },\r\n      {\r\n        label: (\r\n          <div\r\n            onClick={() => {\r\n              confirm({\r\n                title: \"操作提示\",\r\n                icon: <ExclamationCircleFilled />,\r\n                content: \"确认删除页面？删除后，将无法访问此页面。\",\r\n                okText: \"确定\",\r\n                cancelText: \"取消\",\r\n                onOk() {\r\n                  handleDelete();\r\n                  console.log(\"OK\");\r\n                },\r\n                onCancel() {\r\n                  console.log(\"Cancel\");\r\n                },\r\n              });\r\n            }}\r\n            style={{ color: \"#f5596e\" }}\r\n          >\r\n            <PoweroffOutlined /> 删除\r\n          </div>\r\n        ),\r\n        key: \"delete\",\r\n      },\r\n    ];\r\n    return {\r\n      items: allItems.filter((item) =>\r\n        btnList.includes(item.key as WorkCardBtnType)\r\n      ),\r\n    };\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {config ? (\r\n        <div className={styles[\"card\"]}>\r\n          {showPublish && !config.isPublish && (\r\n            <span className={styles[\"unpublish\"]}>未发布</span>\r\n          )}\r\n          <div\r\n            className={styles[\"cover\"]}\r\n            onClick={() => setIsShowPreviewModal(true)}\r\n          >\r\n            <div className={styles[\"header-mask\"]}></div>\r\n            <div className={styles[\"post-wrapper\"]}>\r\n              <img\r\n                src={config?.coverImage || require(\"@/asset/img/logo.png\")}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className={styles[\"title\"]}>{config?.title}</div>\r\n          <div className={styles[\"btn-wrapper\"]}>\r\n            {btnList.includes(\"edit\") && (\r\n              <Button\r\n                className={styles[\"btn\"]}\r\n                type=\"link\"\r\n                onClick={() => linkToEdit(config?._id)}\r\n              >\r\n                编辑\r\n              </Button>\r\n            )}\r\n\r\n            {btnList.includes(\"useTemplate\") && (\r\n              <Button\r\n                className={styles[\"btn\"]}\r\n                type=\"link\"\r\n                onClick={handleUseTemplate}\r\n              >\r\n                使用模板\r\n              </Button>\r\n            )}\r\n\r\n            {btnList.includes(\"copy\") && (\r\n              <Button\r\n                className={styles[\"btn\"]}\r\n                type=\"link\"\r\n                onClick={handleCopy}\r\n              >\r\n                复制\r\n              </Button>\r\n            )}\r\n\r\n            {showMoreBtn && (\r\n              <Dropdown placement=\"topLeft\" arrow menu={moreMenu()}>\r\n                <Button className={styles[\"btn\"]} type=\"link\">\r\n                  更多...\r\n                </Button>\r\n              </Dropdown>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className={`${styles[\"card\"]} ${styles[\"create\"]}`}>\r\n          <div className={styles[\"temp-create\"]} onClick={handleCreate}>\r\n            <PlusOutlined />\r\n            <p style={{ marginTop: 10 }}>新建页面</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {isShowPreviewModal && (\r\n        <PreviewModal\r\n          refresh={refresh}\r\n          id={config?._id}\r\n          open={isShowPreviewModal}\r\n          onClose={() => setIsShowPreviewModal(false)}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WorkCard;\r\n","import { getMyTemplates } from \"@/api\";\r\nimport WorkCard from \"@/components/WorkCard\";\r\nimport { ProjectConfig } from \"@/types/config\";\r\nimport { Spin, message } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst MyTemplate = () => {\r\n  const [templateList, setTemplateList] = useState<ProjectConfig[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchParams, setSearchParams] = useState({\r\n    type: \"my\",\r\n    pageMode: \"h5\",\r\n  });\r\n\r\n  const getList = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const res = await getMyTemplates(searchParams);\r\n      setTemplateList(res.result.projects);\r\n      setLoading(false);\r\n    } catch (e) {\r\n      message.error(\"获取数据失败\");\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getList();\r\n  }, []);\r\n\r\n  return (\r\n    <Spin spinning={loading}>\r\n      <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n        <WorkCard />\r\n        {templateList.map((item) => {\r\n          return (\r\n            <WorkCard\r\n              refresh={getList}\r\n              config={item}\r\n              key={item._id}\r\n              btnList={[\"edit\", \"useTemplate\", \"delete\", \"publishTemplate\"]}\r\n            ></WorkCard>\r\n          );\r\n        })}\r\n      </div>\r\n    </Spin>\r\n  );\r\n};\r\n\r\nexport default MyTemplate;\r\n"],"names":["confirm","Modal","refresh","config","showMoreBtn","btnList","showPublish","navigate","useNavigate","useState","isShowPreviewModal","setIsShowPreviewModal","handleCreate","newPageData","getProjectConfig","createPage","res","id","result","_id","linkToEdit","handleDelete","deletePage","message","handleSetTemplate","setTemplate","handleCopy","copyPage","handleUseTemplate","handlePublish","publishPage","handlePublishTemplate","handleCopyUrl","prefix","window","location","href","split","navigator","clipboard","writeText","console","log","replace","className","styles","isPublish","onClick","src","coverImage","require","title","includes","type","placement","arrow","menu","items","label","key","icon","ExclamationCircleFilled","content","okText","cancelText","onOk","onCancel","style","color","PoweroffOutlined","filter","item","PlusOutlined","marginTop","PreviewModal","open","onClose","templateList","setTemplateList","loading","setLoading","pageMode","searchParams","getList","getMyTemplates","projects","useEffect","spinning","display","flexWrap","map"],"sourceRoot":""}
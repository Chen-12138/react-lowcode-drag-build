{"version":3,"file":"static/js/420.afa71845.chunk.js","mappings":"uOACA,EAA6B,0BAA7B,EAA0E,gCAA1E,EAAkH,qBAAlH,EAA2J,iCAA3J,EAA8P,8B,mBC0F9P,EArFc,WACZ,OAAgCA,EAAAA,EAAAA,KAAxBC,EAAO,EAAPA,QAASC,EAAU,EAAVA,WACjB,GAAwBC,EAAAA,EAAAA,UAA+B,SAAQ,eAAxDC,EAAI,KAAEC,EAAO,KACpB,EAAeC,EAAAA,EAAAA,UAARC,GAAsB,YAAlB,GAmBLC,EAAW,yCAAG,WAAOC,GAAkB,sFACrCR,EAAQQ,GAAQ,KAAD,sCACtB,gBAFgB,sCAIXC,EAAc,yCAAG,WAAOD,GAAqB,sFAC3CP,EAAWO,GAAQ,KAAD,sCACzB,gBAFmB,sCAIpB,OACE,+BACE,gBAAKE,UAAWC,EAAqB,UACnC,iBAAKD,UAAWC,EAA2B,WACzC,cAAGD,UAAWC,EAAgB,uBAC9B,UAAC,IAAI,CAACC,aAAa,MAAMN,KAAMA,EAAMO,SAtBxB,SAACL,GACpBM,QAAQC,IAAIP,GACC,UAATL,EACFI,EAAYC,GAEZC,EAAeD,EAEnB,EAeoE,WAC1D,SAAC,SAAS,CACRQ,KAAK,WACLC,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,gCAC3B,UAEF,SAAC,IAAK,CAACC,YAAY,yBAEX,aAATjB,IACC,SAAC,SAAS,CACRa,KAAK,QACLC,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,gCAC3B,UAEF,SAAC,IAAK,CAACC,YAAY,oBAGvB,SAAC,SAAS,CACRJ,KAAK,WACLC,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,gCAC3B,UAEF,SAAC,aAAc,CAACC,YAAY,oBAG9B,SAAC,SAAS,WACR,SAAC,IAAM,CACLjB,KAAK,UACLkB,SAAS,SACTC,MAAO,CAAEC,MAAO,QAAS,SAEf,UAATpB,EAAmB,eAAO,uBAIjC,gBAAKO,UAAWC,EAA0Ba,QApEzB,WAErBpB,EADW,UAATD,EACM,WAEA,QAEZ,EA8D4E,UAClE,uBAAa,UAATA,EAAmB,2BAAS,gCAElC,eAAGO,UAAWC,EAA4B,kCACvB,iBAAMD,UAAU,UAAS,uDAMtD,C","sources":["webpack://ts-react-app/./src/views/Login/index.less?0f71","views/Login/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"page-login\":\"index_page-login__werZZ\",\"login-page-inner\":\"index_login-page-inner__E-Yd8\",\"title\":\"index_title__-uZUQ\",\"login-page-bottom\":\"index_login-page-bottom__u9WJV\",\"forgot-password\":\"index_forgot-password__R05Sn\",\"switch-do-type\":\"index_switch-do-type__bXo9D\"};","import { useState } from \"react\";\r\nimport { Form, Button, Input } from \"antd\";\r\nimport styles from \"./index.less\";\r\nimport { LoginParam, RegisterParam } from \"@/api\";\r\nimport useUser from \"@/hook/useUser\";\r\n\r\nconst Login = () => {\r\n  const { doLogin, doRegister } = useUser();\r\n  const [type, setType] = useState<\"login\" | \"register\">(\"login\");\r\n  const [form] = Form.useForm();\r\n\r\n  const handleChangeType = () => {\r\n    if (type === \"login\") {\r\n      setType(\"register\");\r\n    } else {\r\n      setType(\"login\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (values: RegisterParam) => {\r\n    console.log(values);\r\n    if (type === \"login\") {\r\n      handleLogin(values);\r\n    } else {\r\n      handleRegister(values);\r\n    }\r\n  };\r\n\r\n  const handleLogin = async (values: LoginParam) => {\r\n    await doLogin(values);\r\n  };\r\n\r\n  const handleRegister = async (values: RegisterParam) => {\r\n    await doRegister(values);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles[\"page-login\"]}>\r\n        <div className={styles[\"login-page-inner\"]}>\r\n          <p className={styles[\"title\"]}>Lucky H5</p>\r\n          <Form autoComplete=\"off\" form={form} onFinish={handleSubmit}>\r\n            <Form.Item\r\n              name=\"username\"\r\n              rules={[\r\n                { required: true, message: \"Please input your username!\" },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"用户名\" />\r\n            </Form.Item>\r\n            {type === \"register\" && (\r\n              <Form.Item\r\n                name=\"email\"\r\n                rules={[\r\n                  { required: true, message: \"Please input your username!\" },\r\n                ]}\r\n              >\r\n                <Input placeholder=\"邮箱\" />\r\n              </Form.Item>\r\n            )}\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[\r\n                { required: true, message: \"Please input your password!\" },\r\n              ]}\r\n            >\r\n              <Input.Password placeholder=\"密码\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                style={{ width: \"100%\" }}\r\n              >\r\n                {type === \"login\" ? \"登录\" : \"注册\"}\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n          <div className={styles[\"switch-do-type\"]} onClick={handleChangeType}>\r\n            <p>{type === \"login\" ? \"马上注册\" : \"马上登录\"}</p>\r\n          </div>\r\n          <p className={styles[\"login-page-bottom\"]}>\r\n            Copyright © 2022 <span className=\"primary\">Lucky H5版权所有</span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["useUser","doLogin","doRegister","useState","type","setType","Form","form","handleLogin","values","handleRegister","className","styles","autoComplete","onFinish","console","log","name","rules","required","message","placeholder","htmlType","style","width","onClick"],"sourceRoot":""}